/*
 * Copyright 2017-2020 Brambolt ehf.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'com.brambolt.gradle.build.library' apply false
}

description = 'Wrench steps for Gradle-based runbooks.'
group = 'com.brambolt.wrench'

ext {
  artifactId = 'brambolt-wrench-steps'
  developers = [[
    email: 'stefan.sigurdsson@brambolt.com',
    id: 'stefan.sigurdsson@brambolt.com',
    name: 'Stefán Sigurðsson'
  ]]
  inceptionYear = '2017'
  isGitHosted = true
  isOpenSource = false // Enables publishing to plugins.gradle.org and Bintray
  licenses = [[
    id: 'Apache-2.0',
    name: 'The Apache Software License, Version 2.0',
    url: 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  ]]
  release = bramboltRelease
  vcsUrl = 'https://github.com/brambolt/gradle-wrenches'
}

apply plugin: 'com.brambolt.gradle.build.library'

dependencies {
  implementation "com.brambolt:brambolt-rt:${version}"
  implementation "com.brambolt.gradle:brambolt-gradle-databases:${version}"
  implementation "com.brambolt.gradle:brambolt-gradle-git:${version}"
  implementation "com.brambolt.gradle:brambolt-gradle-maven:${version}"
  implementation "com.brambolt.gradle:brambolt-gradle-rt:${version}"
  implementation "com.brambolt.wrench:brambolt-wrench-runbooks-gradle:${version}"
  testImplementation "com.brambolt.gradle:brambolt-gradle-testkit:${version}"
}

/*
BuildPlugins.configureTestDependencies(project)
BuildPlugins.configureTestTask(project)
*/

apply plugin: 'com.jfrog.artifactory'

artifactory {
  contextUrl = project.artifactoryContextUrl
  publish {
    repository {
      repoKey = project.artifactoryRepoKey
      username = project.artifactoryUser
      password = project.artifactoryToken
      maven = true
    }
    defaults {
      publications('mavenJava')
      publishArtifacts = true
      publishPom = true
    }
  }
  resolve {
    repository {
      repoKey = project.artifactoryRepoKey
      username = project.artifactoryUser
      password = project.artifactoryToken
      maven = true
    }
  }
}

all.dependsOn(artifactoryPublish)
